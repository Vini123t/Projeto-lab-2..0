
package Visao;
//import DAO.BD;
import DAO.BD_2;

import Entidades.Endereco;
import Entidades.Paciente;
import Entidades.Pessoa;
import Entidades.PessoaFisica;
import Entidades.RespFinFisico;
import Entidades.RespFinJuridico;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class CadastroPaciente extends javax.swing.JFrame {

    private Paciente paciente;
    private Endereco e;
    private Pessoa RespFin; //coisa linda o tal do polimorfismo...

    public CadastroPaciente() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
        paciente = new Paciente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulolb = new javax.swing.JLabel();
        nomelb = new javax.swing.JLabel();
        emaillb = new javax.swing.JLabel();
        datanasclb = new javax.swing.JLabel();
        diabox = new javax.swing.JComboBox<>();
        mesbox = new javax.swing.JComboBox<>();
        anobox = new javax.swing.JComboBox<>();
        rglb = new javax.swing.JLabel();
        cpflb = new javax.swing.JLabel();
        sexolb = new javax.swing.JLabel();
        celularlb = new javax.swing.JLabel();
        sexoM = new javax.swing.JRadioButton();
        sexoF = new javax.swing.JRadioButton();
        salvarbtn = new javax.swing.JButton();
        cancelarbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rftxt = new javax.swing.JTextField();
        emailtxt = new javax.swing.JTextField();
        rgtxt = new javax.swing.JTextField();
        cpftxt = new javax.swing.JTextField();
        celulartxt = new javax.swing.JTextField();
        nometxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rfnometxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        telfixotxt = new javax.swing.JTextField();
        numtxt = new javax.swing.JTextField();
        novoendbtn = new javax.swing.JButton();
        velhoendbtn = new javax.swing.JButton();
        ceptxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        titulolb.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        titulolb.setText("CADASTRO DE NOVO PACIENTE");

        nomelb.setText("NOME");

        emaillb.setText("E-MAIL");

        datanasclb.setText("DATA DE NASCIMENTO");

        diabox.setEditable(true);
        diabox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Dia","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"}));
        diabox.setEnabled(false);
        diabox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaboxActionPerformed(evt);
            }
        });

        mesbox.setEditable(true);
        mesbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Mes","janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"}));
        mesbox.setEnabled(false);

        anobox.setEditable(true);
        anobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Ano","1900","1901","1902","1903","1904","1905","1906","1907","1908","1909","1910","1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017"}));
        anobox.setEnabled(false);

        rglb.setText("RG");

        cpflb.setText("CPF");

        sexolb.setText("SEXO");

        celularlb.setText("CELULAR");

        sexoM.setText("Masculino");
        sexoM.setEnabled(false);
        sexoM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexoMActionPerformed(evt);
            }
        });

        sexoF.setText("Feminino");
        sexoF.setEnabled(false);
        sexoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexoFActionPerformed(evt);
            }
        });

        salvarbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/disquete22.gif"))); // NOI18N
        salvarbtn.setText("SALVAR");
        salvarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarbtnActionPerformed(evt);
            }
        });

        cancelarbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/cancelar.png"))); // NOI18N
        cancelarbtn.setText("CANCELAR");
        cancelarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarbtnActionPerformed(evt);
            }
        });

        jLabel1.setText("RESPONSÁVEL");

        rftxt.setEditable(false);
        rftxt.setBackground(new java.awt.Color(204, 204, 204));
        rftxt.setBorder(null);
        rftxt.setFocusable(false);

        emailtxt.setEnabled(false);

        rgtxt.setEnabled(false);

        cpftxt.setEnabled(false);

        celulartxt.setEnabled(false);

        nometxt.setEnabled(false);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/paciente.png"))); // NOI18N

        rfnometxt.setEditable(false);
        rfnometxt.setBackground(new java.awt.Color(204, 204, 204));
        rfnometxt.setBorder(null);
        rfnometxt.setFocusable(false);

        jButton1.setText("Escolha");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setText("TELEFONE FIXO");

        jLabel9.setText("NUMERO");

        jLabel11.setText("CEP");

        telfixotxt.setEnabled(false);

        numtxt.setEnabled(false);

        novoendbtn.setText("Novo Endereco");
        novoendbtn.setEnabled(false);
        novoendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoendbtnActionPerformed(evt);
            }
        });

        velhoendbtn.setText("Usar um Endereço já cadastrado");
        velhoendbtn.setEnabled(false);
        velhoendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                velhoendbtnActionPerformed(evt);
            }
        });

        ceptxt.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarbtn)
                .addGap(18, 18, 18)
                .addComponent(salvarbtn)
                .addGap(140, 140, 140))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rglb)
                                    .addComponent(celularlb)
                                    .addComponent(sexolb)
                                    .addComponent(cpflb)
                                    .addComponent(datanasclb)
                                    .addComponent(nomelb)
                                    .addComponent(emaillb)
                                    .addComponent(jLabel11))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nometxt, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                                    .addComponent(numtxt)
                                    .addComponent(telfixotxt)
                                    .addComponent(rgtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cpftxt, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sexoM)
                                        .addGap(18, 18, 18)
                                        .addComponent(sexoF))
                                    .addComponent(celulartxt, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(diabox, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mesbox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(anobox, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(emailtxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ceptxt))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(109, 109, 109)
                                .addComponent(titulolb, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(96, 96, 96)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rftxt, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rfnometxt, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(novoendbtn)
                                        .addGap(36, 36, 36)
                                        .addComponent(velhoendbtn)))))
                        .addContainerGap(119, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titulolb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rfnometxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(rftxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(novoendbtn)
                    .addComponent(velhoendbtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ceptxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(numtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(telfixotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomelb)
                    .addComponent(nometxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emaillb)
                    .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rglb)
                    .addComponent(rgtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpflb)
                    .addComponent(cpftxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sexolb)
                    .addComponent(sexoM)
                    .addComponent(sexoF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(celularlb)
                    .addComponent(celulartxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datanasclb)
                    .addComponent(diabox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvarbtn)
                    .addComponent(cancelarbtn))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void diaboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diaboxActionPerformed

    private void cancelarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarbtnActionPerformed
        JOptionPane.showMessageDialog(null, "Cadastro cancelado pelo usuário");
        dispose();
    }//GEN-LAST:event_cancelarbtnActionPerformed

    private void salvarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarbtnActionPerformed

        String nome, email, rg, cpf, celular;
        char sexo = ' ';

        String dd, MM, yyyy;
        Date dataNasc = new Date();

        nome = nometxt.getText();
        email = emailtxt.getText();
        rg = rgtxt.getText();
        cpf = cpftxt.getText();
        celular = celulartxt.getText();
        String cep = ceptxt.getText();
        String telfixo = telfixotxt.getText();
        int num = 0;
        boolean valido = true;
        
        try {
            num = Integer.parseInt(numtxt.getText());
        }
        catch(Exception e) {
            valido = false;
            JOptionPane.showMessageDialog(null,"numero invalido\n"+e);
        }


        if (sexoF.isSelected()) {
            sexo = 'F';
        } else if (sexoM.isSelected()) {
            sexo = 'M';
        } else {
            JOptionPane.showMessageDialog(null, "É necessário escolher um sexo");
            valido = false;
        }

        //RespFin = BD.getrf(Integer.parseInt(rftxt.getText()));
        //ATUALIZADO
        BD_2.getRespFin(Integer.parseInt(rftxt.getText()));

        dd = diabox.getSelectedItem().toString();
        MM = mesbox.getSelectedItem().toString();
        yyyy = anobox.getSelectedItem().toString();

        switch (MM) {
            case "janeiro":
                MM = "01";
                break;
            case "fevereiro":
                MM = "02";
                break;
            case "março":
                MM = "03";
                break;
            case "abril":
                MM = "05";
                break;
            case "maio":
                MM = "06";
                break;
            case "junho":
                MM = "06";
                break;
            case "julho":
                MM = "07";
                break;
            case "agosto":
                MM = "08";
                break;
            case "setembro":
                MM = "09";
                break;
            case "outubro":
                MM = "10";
                break;
            case "novembro":
                MM = "11";
                break;
            case "dezembro":
                MM = "12";
                break;
        }
        String datanas = dd + "-" + MM + "-" + yyyy;
        try {
            dataNasc = PessoaFisica.FormatarData(datanas);
        } catch (ParseException ex) {
            Logger.getLogger(CadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "ERRO NA PASSAGEM DA DATA DE NASCIMENTO");
            valido = false;
        }

        //verificações:
        if (nometxt.getText() == null) {
            valido = false;
            JOptionPane.showMessageDialog(null, "O campo NOME não pode ser vazio.");
        }
        if (emailtxt.getText() == null) {
            valido = false;
            JOptionPane.showMessageDialog(null, "O campo EMAIL não pode ser vazio");
        }
        if (rgtxt.getText() == null) {
            valido = false;
            JOptionPane.showMessageDialog(null, "O campo RG não pode ser vazio");
        }
        if (rg.length() != 9) {
            valido = false;
            JOptionPane.showMessageDialog(null, "RG inválido. utilize o formato de 7 digitos e 2 letras");
        }
        if (cpftxt.getText() == null) {
            valido = false;
            JOptionPane.showMessageDialog(null, "O campo CPF não pode ser vazio");
        }
        if (cpf.length() != 11) {
            valido = false;
            JOptionPane.showMessageDialog(null, "CPF invalido, utilize 11 digitos numericos sem pontuação");
        }
        if (celulartxt.getText() == null) {
            JOptionPane.showMessageDialog(null, "Celular está em branco. cadastrando sem celular.");
        }
        if (celular.length() != 11 && celulartxt.getText().length() != 0) {
            valido = false;
            JOptionPane.showMessageDialog(null, "Celular inválido. utilize 11 digitos numericos");
        }
        if (RespFin == null) {
            valido = false;
            JOptionPane.showMessageDialog(null, "Nenhum Responsável Financeiro Selecionado");
        }
        if (cep.length() != 8) {
            valido = false;
            JOptionPane.showMessageDialog(null,"cep invalido");
        }
        if (telfixo.length() != 10 && telfixo.length() != 0) {
            valido = false;
            JOptionPane.showMessageDialog(null,"Telefone fixo invalido");
        }

        //após as verificações
        if (valido) {
            e = new Endereco(cep,num,telfixo);
            BD_2.add(e);
            e.setcodigo(BD_2.getCodEndereco(new String(e.getcep()), e.getnumero()));
            paciente.setendereco(e);
            paciente.setRespFin(RespFin);
            paciente.setnome(nome);
            paciente.setcelular(celular);
            paciente.setcpf(cpf);
            paciente.setdataNasc(dataNasc);
            paciente.setemail(email);
            paciente.setrg(rg);
            paciente.setsexo(sexo);

            if (RespFin instanceof RespFinFisico) {
                PessoaFisica teste = (PessoaFisica) RespFin;
                if (paciente.getnome().equals(teste.getnome()) && paciente.getcpf().equals(teste.getcpf())) {
                    //BD.add(paciente, RespFin.getidPessoa());
                    //ATUALIZADO
                    BD_2.add(paciente, RespFin.getidPessoa());
                    dispose();
                } else {
                    //BD.add(paciente);
                    //ATUALIZADO
                    BD_2.add(paciente);
                    dispose();
                }
            } else {
                //ATUALIZADO
                //BD.add(paciente);
                BD_2.add(paciente);
                dispose();
            }
        }


    }//GEN-LAST:event_salvarbtnActionPerformed

    private void sexoMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexoMActionPerformed
        if (sexoM.isSelected()) {
            sexoF.setSelected(false);
        }
    }//GEN-LAST:event_sexoMActionPerformed

    private void sexoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexoFActionPerformed
        if (sexoF.isSelected()) {
            sexoM.setSelected(false);
        }
    }//GEN-LAST:event_sexoFActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog(null, "digite o ID do Responsável Financeiro"));
        //RespFin = getrf(id);
        //ATUALIZADO
        RespFin = BD_2.getRespFin(id);
        if (RespFin != null) {
            rftxt.setText("" + RespFin.getidPessoa());
            rfnometxt.setText(RespFin.getnome());

            if (RespFin instanceof RespFinFisico) { //se for juridico a ID seria diferente do paciente.

                int choice = JOptionPane.showConfirmDialog(null, "O responsável selecionado é a mesma pessoa a ser cadastrada como um Paciente?");
                switch (choice) {
                    case 0: //->selecionou sim. preencher os campos com os dados do objeto daquela ID
                    RespFinFisico pessoa = (RespFinFisico) RespFin;
                    Endereco end = pessoa.getendereco();
                    ceptxt.setText(new String(end.getcep()));
                    numtxt.setText(""+end.getnumero());
                    telfixotxt.setText(new String(end.gettelFixo()));
                    nometxt.setText(pessoa.getnome());
                    emailtxt.setText(pessoa.getemail());
                    rgtxt.setText(pessoa.getrg());
                    cpftxt.setText(pessoa.getcpf());
                    if (pessoa.getsexo() == 'M') {
                        sexoM.setSelected(true);
                        sexoF.setSelected(false);
                    } else {
                        sexoF.setSelected(true);
                        sexoM.setSelected(false);
                    }
                    celulartxt.setText(pessoa.getcelular());

                    String[] datadivididaempartesemgambiarradasmuitoloucas = pessoa.getdataNasc().split("/");

                    String MM = datadivididaempartesemgambiarradasmuitoloucas[1];
                    switch (MM) {
                        case "01":
                        MM = "janeiro";
                        break;
                        case "02":
                        MM = "fevereiro";
                        break;
                        case "03":
                        MM = "março";
                        break;
                        case "04":
                        MM = "abril";
                        break;
                        case "05":
                        MM = "maio";
                        break;
                        case "06":
                        MM = "junho";
                        break;
                        case "07":
                        MM = "julho";
                        break;
                        case "08":
                        MM = "agosto";
                        break;
                        case "09":
                        MM = "setembro";
                        break;
                        case "10":
                        MM = "outubro";
                        break;
                        case "11":
                        MM = "novembro";
                        break;
                        case "12":
                        MM = "dezembro";
                        break;
                    }
                    datadivididaempartesemgambiarradasmuitoloucas[1] = MM;

                    diabox.setSelectedItem(datadivididaempartesemgambiarradasmuitoloucas[0]);
                    mesbox.setSelectedItem(datadivididaempartesemgambiarradasmuitoloucas[1]);
                    anobox.setSelectedItem(datadivididaempartesemgambiarradasmuitoloucas[2]);

                    break;
                    case 1: //->selecionou não. Liberar os campos para edição
                    novoendbtn.setEnabled(true);
                    velhoendbtn.setEnabled(true);
                    ceptxt.setEnabled(true);
                    numtxt.setEnabled(true);
                    telfixotxt.setEnabled(true);
                    nometxt.setEnabled(true);
                    emailtxt.setEnabled(true);
                    rgtxt.setEnabled(true);
                    cpftxt.setEnabled(true);
                    sexoM.setEnabled(true);
                    sexoF.setEnabled(true);
                    celulartxt.setEnabled(true);
                    diabox.setEnabled(true);
                    mesbox.setEnabled(true);
                    anobox.setEnabled(true);
                    break;
                    case 2: //->selecionou cancelar. limpar os campos de respfin
                    rftxt.setText(null);
                    rfnometxt.setText(null);
                    break;
                }
            } else { //se for juridico libera geral..
                novoendbtn.setEnabled(true);
                velhoendbtn.setEnabled(true);
                ceptxt.setEnabled(true);
                numtxt.setEnabled(true);
                telfixotxt.setEnabled(true);
                nometxt.setEnabled(true);
                emailtxt.setEnabled(true);
                rgtxt.setEnabled(true);
                cpftxt.setEnabled(true);
                sexoM.setEnabled(true);
                sexoF.setEnabled(true);
                celulartxt.setEnabled(true);
                diabox.setEnabled(true);
                mesbox.setEnabled(true);
                anobox.setEnabled(true);
            }

        } else { //se nao for poha nenhuma entao nao existe
            JOptionPane.showMessageDialog(null, "a ID inserida não existe");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void novoendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoendbtnActionPerformed
        ceptxt.setEnabled(true);
        ceptxt.setEditable(true);
        ceptxt.setText(null);

        numtxt.setEnabled(true);
        numtxt.setEditable(true);
        numtxt.setText(null);

        telfixotxt.setEnabled(true);
        telfixotxt.setEditable(true);
        telfixotxt.setText(null);
    }//GEN-LAST:event_novoendbtnActionPerformed

    private void velhoendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_velhoendbtnActionPerformed
        try {
            int idend = Integer.parseInt(JOptionPane.showInputDialog(null, "Digite a ID do endereço"));
            //e = BD.getendereco(idend);
            //ATUALIZADO
            e = BD_2.getEndereco(idend);
            if (e != null) {
                ceptxt.setEnabled(true);
                ceptxt.setEditable(false);
                ceptxt.setText(new String(e.getcep()));

                numtxt.setEnabled(true);
                numtxt.setEditable(false);
                numtxt.setText("" + e.getnumero());

                telfixotxt.setEnabled(true);
                telfixotxt.setEditable(false);
                telfixotxt.setText(new String(e.gettelFixo()));
            }
            else {
                JOptionPane.showMessageDialog(null,"Endereço não registrado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "utilize apenas numeros, não use nenhum outro caractere!\nERRO: " + e);
        }

    }//GEN-LAST:event_velhoendbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPaciente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPaciente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPaciente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPaciente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> anobox;
    private javax.swing.JButton cancelarbtn;
    private javax.swing.JLabel celularlb;
    private javax.swing.JTextField celulartxt;
    private javax.swing.JTextField ceptxt;
    private javax.swing.JLabel cpflb;
    private javax.swing.JTextField cpftxt;
    private javax.swing.JLabel datanasclb;
    private javax.swing.JComboBox<String> diabox;
    private javax.swing.JLabel emaillb;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> mesbox;
    private javax.swing.JLabel nomelb;
    private javax.swing.JTextField nometxt;
    private javax.swing.JButton novoendbtn;
    private javax.swing.JTextField numtxt;
    private javax.swing.JTextField rfnometxt;
    private javax.swing.JTextField rftxt;
    private javax.swing.JLabel rglb;
    private javax.swing.JTextField rgtxt;
    private javax.swing.JButton salvarbtn;
    private javax.swing.JRadioButton sexoF;
    private javax.swing.JRadioButton sexoM;
    private javax.swing.JLabel sexolb;
    private javax.swing.JTextField telfixotxt;
    private javax.swing.JLabel titulolb;
    private javax.swing.JButton velhoendbtn;
    // End of variables declaration//GEN-END:variables
}
